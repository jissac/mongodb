// https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/


// persons older than 50, group by gender and find total number persons, avg age of each group
use('contactData');
db.contacts.aggregate([
    { $match: { "dob.age": { $gt: 50 } } }, 
    { 
        $group: { 
            _id: { gender: "$gender" }, 
            numPersons: { $sum: 1 }, 
            avgAge: { $avg: "$dob.age"}  
        } 
    },
    { $sort: { numPersons: -1 } }
]).pretty();


// $project to reshape each document 
use('contactData');
db.contacts.aggregate([
    {
        $project: {
          _id: 0,
          gender: 1,
        //   fullName: { $concat: ["$name.first", " ", "$name.last"]}
        // fullName: { 
        //     $concat: [
        //         { $toUpper: "$name.first" },
        //         " ",
        //         { $toUpper: "$name.last" }
        //     ]
        // }
        fullName: { 
            $concat: [
                { $toUpper: { $substrCP: ["$name.first", 0, 1] } },
                { $substrCP: [
                    "$name.first",
                     1,
                    { $subtract: [ { $strLenCP: "$name.first"}, 1] }
                  ] 
                },
                " ",
                { $toUpper: { $substrCP: ["$name.last", 0, 1]} },

                { $substrCP: [
                    "$name.last",
                     1,
                    { $subtract: [ { $strLenCP: "$name.last"}, 1] }
                  ] 
                }
            ]
        }
        }
    }
]).pretty();

// turning location in geoJSON array
use('contactData');
db.contacts.aggregate([
    {
        $project: { 
            _id: 0, 
            name: 1,
            email: 1,
            location: {
                type: "Point",
                coordinates: [
                    { $convert: { input: "$location.coordinates.longitude", to: "double", onError: 0.0, onNull: 0.0 } },
                    { $convert: { input: "$location.coordinates.latitude" , to: "double", onError: 0.0, onNull: 0.0} }
                ]
            }
        }

    }
]).pretty()

// transforming the birthday format
use('contactData');
db.contacts.aggregate([
    {
        $project: {
            _id: 0,
            name: 1,
            birthdate: {
                $toDate: "$dob.date"
            },
            age: "$dob.age"
        }
    },
    { 
        $group: {
            _id: { birthYear: { $isoWeekYear: "$birthdate" }
            },
            numPersons: { $sum: 1 }
        }
    },
    { $sort: { birthYear: -1 } }
]).pretty()

// 
use('contactData');
db.friends.aggregate([
    {
        $group: {
            _id: {
                age: "$age"
            },
            allHobbies: { 
                $push: "$hobbies"
            }
        }
    }
])
